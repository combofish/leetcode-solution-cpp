#include <iostream>
#include <vector>
#include <string>
using namespace std;

inline bool isMatch(const string& s, const string& p) {
    int m = s.size(), n = p.size();

    vector<vector<int>> dp(m + 1, vector<int>(n + 1));
    dp.front().front() = 1;

    for(int i = 1; i<=n; ++i){
        if(p[i-1] == '*'){
            dp[0][i] = true;
        }else{
            break;
        }
    }

    for(int i = 1; i<=m; ++i){
        for(int j = 1; j<=n; ++j){
            if(p[j-1] == '*'){
                dp[i][j] = dp[i][j-1] | dp[i-1][j];
            }else if(p[j-1] == '?' || s[i-1] == p[j-1]){
                dp[i][j] = dp[i-1][j-1];
        
            }
        }
    }

 
    return dp.back().back();

}
int main() {
    // int a, b;
    // while (cin >> a >> b) { // 注意 while 处理多个 case
    //     cout << a + b << endl;
    // }


    string findStr, fileName;
    cin >> findStr;
    cin >> fileName;

    auto ans = isMatch(fileName, findStr);

    string res = ans ? "true": "false";
    cout << res << endl;
    return 0;
}
// 64 位输出请用 printf("%lld")